{"version":3,"file":"js/289.2d16f300.js","mappings":"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","sources":["webpack://HouseHub/./src/views/configuracion/Configuracion.vue","webpack://HouseHub/./src/views/configuracion/Lotes.vue","webpack://HouseHub/./src/views/configuracion/Lotes.vue?00c0","webpack://HouseHub/./src/views/configuracion/TipoLotes.vue","webpack://HouseHub/./src/views/configuracion/TipoLotes.vue?d6cf","webpack://HouseHub/./src/views/configuracion/TipoCuotas.vue","webpack://HouseHub/./src/views/configuracion/TipoCuotas.vue?2936","webpack://HouseHub/./src/views/configuracion/Users.vue","webpack://HouseHub/./src/views/configuracion/Users.vue?3979","webpack://HouseHub/./src/views/configuracion/ConceptosCA.vue","webpack://HouseHub/./src/views/configuracion/ConceptosCA.vue?6220","webpack://HouseHub/./src/views/configuracion/TipoEgresos.vue","webpack://HouseHub/./src/views/configuracion/TipoEgresos.vue?85be","webpack://HouseHub/./src/views/configuracion/Configuracion.vue?6b2f"],"sourcesContent":["<template>\r\n    <div class=\"card\">\r\n        <div class=\"card\">\r\n            <h2 style=\"display: flex; align-items: center; gap: 10px;\"><i class=\"pi pi-cog\" style=\"font-size: 2rem\" /> Configuracion</h2>\r\n        </div>\r\n        <div>\r\n            <b style=\"color: var(--p-tabs-tab-active-color);\">Seleccione el condominio: </b>\r\n            <Select v-model=\"selectedItem\" :options=\"condominiosList\" optionLabel=\"name\" @change=\"refreshTable\"\r\n                style=\"width: 250px;\" size=\"small\" />\r\n\r\n            <Button icon=\"pi pi-sync\" variant=\"text\" v-tooltip.top=\"'Actualizar lista'\" @click=\"refreshTable\"\r\n                style=\"margin-right: 20px;\" /><!-- refresh -->\r\n        </div>\r\n\r\n        <div>\r\n            <Tabs>\r\n                <TabList>\r\n                    <Tab v-for=\"tab in items\" :key=\"tab.id\" :value=\"tab.id\">\r\n                        <div>\r\n                            <i :class=\"tab.icon\" style=\"margin-right: 10px;\" />\r\n                            {{ tab.label }}\r\n                        </div>\r\n                    </Tab>\r\n                </TabList>\r\n                <TabPanels>\r\n                    <TabPanel value=\"0\">\r\n                        <p class=\"m-0\">\r\n                            <Lotes :selectedCondominio=\"selectedItem\" />\r\n                        </p>\r\n                    </TabPanel>\r\n                    <TabPanel value=\"1\">\r\n                        <p class=\"m-0\">\r\n                            <TipoLotes :selectedCondominio=\"selectedItem\" />\r\n                        </p>\r\n                    </TabPanel>\r\n                    <TabPanel value=\"2\">\r\n                        <p class=\"m-0\">\r\n                            <TipoCuotas :selectedCondominio=\"selectedItem\" />\r\n                        </p>\r\n                    </TabPanel>\r\n                    <TabPanel value=\"3\">\r\n                        <p class=\"m-0\">\r\n                            <ConceptosCA :selectedCondominio=\"selectedItem\" />\r\n                        </p>\r\n                    </TabPanel>\r\n                    <TabPanel value=\"4\">\r\n                        <p class=\"m-0\">\r\n                            <TipoEgresos :selectedCondominio=\"selectedItem\" />\r\n                        </p>\r\n                    </TabPanel>\r\n                    <TabPanel value=\"5\">\r\n                        <p class=\"m-0\">\r\n                            <Users :selectedCondominio=\"selectedItem\" />\r\n                        </p>\r\n                    </TabPanel>\r\n                </TabPanels>\r\n            </Tabs>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { useAuthStore } from '@/service/auth';\r\nimport apiService from '@/service/apiService';\r\nimport { Button, Select, Tab, TabList, TabPanel, TabPanels, Tabs } from 'primevue';\r\nimport 'primeicons/primeicons.css';\r\nimport Lotes from './Lotes.vue';\r\nimport TipoLotes from './TipoLotes.vue';\r\nimport TipoCuotas from './TipoCuotas.vue';\r\nimport Users from './Users.vue';\r\nimport ConceptosCA from './ConceptosCA.vue';\r\nimport TipoEgresos from './TipoEgresos.vue';\r\n\r\n\r\nexport default {\r\n    components: {\r\n        Tabs, TabList, Tab, TabPanels, TabPanel, Button, Select, Lotes, TipoLotes, TipoCuotas, Users, ConceptosCA, TipoEgresos\r\n    },\r\n    data() {\r\n        return {\r\n            authStore: useAuthStore(),\r\n            selectedItem: null,\r\n            condominiosList: [],\r\n            userData: null,\r\n            items: [\r\n                { id: '0', label: 'Lotes', icon: 'pi pi-home' },\r\n                { id: '1', label: 'Tipo de Lotes', icon: 'pi pi-tags' },\r\n                { id: '2', label: 'Cuotas', icon: 'pi pi-dollar' },\r\n                { id: '3', label: 'Tipo de Cargos / Abonos', icon: 'pi pi-dollar' },\r\n                { id: '4', label: 'Tipo de Egresos', icon: 'pi pi-money-bill' },\r\n                { id: '5', label: 'Usuarios', icon: 'pi pi-address-book' }\r\n            ]\r\n        }\r\n    },\r\n    methods: {\r\n        async refreshTable() {\r\n            if (this.userData) {\r\n                try {\r\n                    this.condominiosList = (await apiService.getCondominiosByUsr(this.userData.id)).data;\r\n                } catch (error) {\r\n                    console.error(\"Failed to fetch getCondominiosByUsr:\", error);\r\n                    this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n                }\r\n            }\r\n        },\r\n        async getUserData() {\r\n            try {\r\n                this.userData = this.authStore.getUserData();\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch getUserData:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getUserData()\r\n        this.refreshTable();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scope>\r\n.internal {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n}\r\n\r\n.internalHeader {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n</style>\r\n","<template>\r\n    <Toast />\r\n    <ConfirmPopup></ConfirmPopup>\r\n\r\n    <div style=\"width: 90%;\">\r\n        <TableBar :showIcons=\"[1, 0, 1, 1, 1]\" @addItem=\"addItem\" @deleteItem=\"deleteItem\" @refreshTable=\"refreshTable\"\r\n            @exportExcel=\"exportExcel\" />\r\n\r\n\r\n        <DataTable v-model:selection=\"selectedItems\" :value=\"items\" sortField=\"id\" stripedRows size=\"small\" paginator\r\n            :rows=\"10\" selectionMode=\"multiple\" :metaKeySelection=\"metaKey\" dataKey=\"id\" editMode=\"cell\"\r\n            @cell-edit-complete=\"onCellEditComplete\" :pt=\"{\r\n                table: { style: 'min-width: 50rem' },\r\n                column: {\r\n                    bodycell: ({ state }) => ({\r\n                        class: [{ '!py-0': state['d_editing'] }]\r\n                    })\r\n                }\r\n            }\">\r\n            <template #empty> No existen datos para esta tabla. </template>\r\n            <template #loading> Cargando informacion.... </template>\r\n            <Column selectionMode=\"multiple\" style=\"width: 1%\"></Column>\r\n            <Column field=\"name\" header=\"Nombre\" style=\"width: 30%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ data.name }}\r\n                </template>\r\n                <template #editor=\"{ data, field }\">\r\n                    <InputText v-model=\"data.name\" autofocus fluid size=\"small\" @keydown.enter=\"$event.target.blur()\"\r\n                        :class=\"{ 'p-invalid': !isNameValid(data, field) }\" />\r\n                    <Message v-if=\"!isNameValid(data, field)\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        errors.name }}\r\n                    </Message>\r\n                </template>\r\n            </Column>\r\n            <Column field=\"description\" header=\"Descripcion\" style=\"width: 30%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ data.description }}\r\n                </template>\r\n                <template #editor=\"{ data, field }\">\r\n                    <InputText v-model=\"data.description\" autofocus fluid size=\"small\"\r\n                        @keydown.enter=\"$event.target.blur()\"\r\n                        :class=\"{ 'p-invalid': !isDescriptionValid(data, field) }\" />\r\n                    <Message v-if=\"!isDescriptionValid(data, field)\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        errors.description }}\r\n                    </Message>\r\n                </template>\r\n            </Column>\r\n            <Column field=\"lotetypeId\" header=\"Tipo de Lote\" style=\"width: 20%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ data.lotetypeName }}\r\n                </template>\r\n                <template #editor=\"{ data }\">\r\n                    <Select name=\"lotetypeId\" :options=\"itemsLoteTypes\" v-model=\"selectedLoteType\" optionLabel=\"name\"\r\n                        placeholder=\"Tipo de lote\" fluid style=\" margin-bottom: 10px;  margin-top: 10px;\"\r\n                        size=\"small\" />\r\n                </template>\r\n            </Column>\r\n            <Column field=\"cuotatypeId\" header=\"Cuota asignada\" style=\"width: 30%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ data.cuotatypeName }}\r\n                </template>\r\n                <template #editor=\"{ data }\">\r\n                    <Select name=\"cuotatypeId\" :options=\"itemsCuotaTypes\" optionLabel=\"name\" v-model=\"selectedCuotaType\"\r\n                        placeholder=\"Cuota asignada\" fluid style=\" margin-bottom: 10px;  margin-top: 20px;\"\r\n                        size=\"small\">\r\n                        <template #option=\"item\">\r\n                            <div class=\"flex-row gap-3\">\r\n                                <div>{{ item.option.name }}</div>\r\n                                <div>$ {{ item.option.amount }}</div>\r\n                            </div>\r\n                        </template>\r\n                    </Select>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n\r\n    </div>\r\n\r\n\r\n    <Dialog v-model:visible=\"showAdd\" modal :header=\"titulo\" :style=\"{ width: '25rem' }\">\r\n        <div class=\"form\">\r\n            <Form v-slot=\"$form\" v-bind:initialValues=\"initialValues\" v-bind:resolver=\"resolver\"\r\n                :validateOnValueUpdate=\"false\" :validateOnBlur=\"false\" @submit=\"onFormSubmit\"\r\n                class=\"flex flex-col gap-4 w-full sm:w-56\">\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"name\" type=\"text\" placeholder=\"Nombre\" fluid size=\"small\" />\r\n                    <Message v-if=\"$form.name?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.name.error.message }}</Message>\r\n                </div>\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"description\" type=\"text\" placeholder=\"Descripcion\" fluid size=\"small\" />\r\n                    <Message v-if=\"$form.description?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.description.error.message }}</Message>\r\n                </div>\r\n                <Select name=\"lotetypeId\" :options=\"itemsLoteTypes\" optionLabel=\"name\" placeholder=\"Tipo de lote\" fluid\r\n                    style=\" margin-bottom: 10px;    margin-top: 10px;\" v-model=\"selectedLoteType\" size=\"small\" />\r\n                <Message v-if=\"$form.lotetypeId?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                    $form.lotetypeId.error.message }}</Message>\r\n                <Select name=\"cuotatypeId\" :options=\"itemsCuotaTypes\" optionLabel=\"name\" placeholder=\"Cuota asignada\"\r\n                    fluid style=\" margin-bottom: 10px;  margin-top: 20px;\" v-model=\"selectedCuotaType\" size=\"small\">\r\n                    <template #option=\"item\">\r\n                        <div class=\"flex-row gap-3\">\r\n                            <div>{{ item.option.name }}</div>\r\n                            <div>$ {{ item.option.amount }}</div>\r\n                        </div>\r\n                    </template>\r\n                </Select>\r\n                <Message v-if=\"$form.cuotatypeId?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                    $form.cuotatypeId.error.message }}</Message>\r\n                <div class=\"formButtons\">\r\n                    <Button type=\"button\" label=\"Cancelar\" severity=\"secondary\" @click=\"showAdd = false\"\r\n                        style=\"margin-top: 20px;\"></Button>\r\n                    <Button type=\"submit\" label=\"Guardar\" style=\"margin-left: 20px;\"></Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\n\r\nimport apiService from '@/service/apiService';\r\nimport { ref } from 'vue';\r\nimport TableBar from '@/components/TableBar.vue';\r\nimport { Button, Column, ConfirmPopup, DataTable, Dialog, InputText, Message, Select, Toast } from 'primevue';\r\nimport { Form } from '@primevue/forms';\r\nimport { useToast } from 'primevue/usetoast';\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport default {\r\n    props: {\r\n        selectedCondominio: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n    },\r\n    components: {\r\n        DataTable, Column, TableBar, Dialog, InputText, Button, Form, Select, Message, ConfirmPopup, Toast\r\n    },\r\n    data() {\r\n        return {\r\n            titulo: ref(''),\r\n            confirm: useConfirm(),\r\n            toast: useToast(),\r\n            selectedItems: ref([]),\r\n            selectedCuotaType: ref(),\r\n            selectedLoteType: ref(),\r\n            metaKey: ref(true),\r\n            items: ref([]),\r\n            itemsLoteTypes: ref([]),\r\n            itemsCuotaTypes: ref([]),\r\n            showAdd: ref(false),\r\n            newItem: ref(false),\r\n            initialValues: {\r\n                id: 0,\r\n                name: '',\r\n                description: '',\r\n                lotetypeId: null,\r\n                cuotatypeId: null,\r\n                condominio: null,\r\n                users: null\r\n            },\r\n            errors: {\r\n                name: '',\r\n                description: '',\r\n                loteType: '',\r\n                cuotaType: '',\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // llamadas al api\r\n        async getTiposLote() {\r\n            try {\r\n                if (this.selectedCondominio) {\r\n                    this.itemsLoteTypes = (await apiService.getTiposLoteByCondominio(this.selectedCondominio.id)).data;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch Tipos de Lotes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async getTiposCuota() {\r\n            try {\r\n                if (this.selectedCondominio) {\r\n                    this.itemsCuotaTypes = (await apiService.getTiposCuotaByCondominio(this.selectedCondominio.id)).data;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch Tipos de Lotes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async refreshTable() {\r\n            try {\r\n                if (this.selectedCondominio) {\r\n                    this.items = (await apiService.getLotesByCondominio(this.selectedCondominio.id)).data;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch Lotes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async updateLote() {\r\n            try {\r\n                return (await apiService.updateLote(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to update Lote:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error al actualizar el registro.', life: 3000 });\r\n            }\r\n        },\r\n        async createLote() {\r\n            try {\r\n                return (await apiService.createLote(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to create Lote:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error al crear un nuevo registro.', life: 3000 });\r\n            }\r\n        },\r\n        async deleteLote(id) {\r\n            try {\r\n                await apiService.deleteLote(id);\r\n                this.toast.add({ severity: 'info', summary: 'Registros borrados', life: 3000 });\r\n                this.selectedItems = null;\r\n                await this.refreshTable();\r\n            } catch (error) {\r\n                console.error(\"Failed to delete Lote:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'No se puede borrar el dato, verifique que no tenga dependencias con otros datos.', life: 3000 });\r\n            }\r\n        },\r\n\r\n        // listeners de eventos de la barra de acciones\r\n        addItem() {\r\n            if (!this.selectedCondominio) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un condominio para agregar un lote.', life: 3000 });\r\n                return;\r\n            }\r\n            this.titulo = 'Agregar nuevo lote';\r\n            this.getTiposLote();\r\n            this.getTiposCuota();\r\n            this.initialValues.id = null;\r\n            this.initialValues.name = '';\r\n            this.initialValues.description = '';\r\n            this.initialValues.lotetypeId = null\r\n            this.initialValues.cuotatypeId = null;\r\n            this.initialValues.users = [];\r\n            this.selectedCuotaType = null;\r\n            this.selectedLoteType = null;\r\n            this.showAdd = true;\r\n            this.newItem = true;\r\n        },\r\n\r\n        deleteItem(event) {\r\n            if (!this.selectedItems || this.selectedItems.length === 0) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un elemento para borrar.', life: 3000 });\r\n            } else {\r\n                this.confirm.require({\r\n                    target: event.currentTarget,\r\n                    message: 'Desea borrar el/los registros?',\r\n                    icon: 'pi pi-info-circle',\r\n                    rejectProps: {\r\n                        label: 'Cancelar',\r\n                        severity: 'secondary',\r\n                        outlined: true\r\n                    },\r\n                    acceptProps: {\r\n                        label: 'Borrar',\r\n                        severity: 'danger'\r\n                    },\r\n                    accept: () => {\r\n                        for (const item of this.selectedItems) {\r\n                            this.deleteLote(item.id);\r\n                            this.items = this.items.filter(itemx => itemx.id !== item.id);\r\n                        }\r\n                    },\r\n                    reject: () => {\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // Acciones del Form \r\n        //Validacion del form\r\n        resolver({ values }) {\r\n            const errors = {};\r\n            if (!values.name) {\r\n                errors.name = [{ message: 'El nombre es requerido.' }];\r\n            } else if (values.name.length > 40) {\r\n                errors.name = [{ message: 'El nombre no puede tener mas de 40 caracteres.' }];\r\n            }\r\n            if (!values.description) {\r\n                errors.description = [{ message: 'La descripcion descripcion es requerida.' }];\r\n            } else if (values.description.length > 60) {\r\n                errors.description = [{ message: 'La descripcion no puede tener mas de 60 caracteres.' }];\r\n            }\r\n            if (!values.lotetypeId) {\r\n                errors.lotetypeId = [{ message: 'El tipo de lote es requerido.' }];\r\n            }\r\n            if (!values.cuotatypeId) {\r\n                errors.cuotatypeId = [{ message: 'La cuota es requerida.' }];\r\n            }\r\n            this.initialValues.name = values.name;\r\n            this.initialValues.description = values.description;\r\n            this.initialValues.lotetypeId = values.lotetypeId;\r\n            this.initialValues.cuotatypeId = values.cuotatypeId;\r\n            return {\r\n                errors\r\n            };\r\n        },\r\n        async onFormSubmit({ valid }) {\r\n            if (valid) {\r\n                this.showAdd = false;\r\n                this.selectedItems = [];\r\n                if (this.newItem) {\r\n                    this.initialValues.condominio = this.selectedCondominio;\r\n                    this.initialValues = await this.createLote();\r\n                    this.items = [...this.items, this.initialValues];\r\n                    await this.refreshTable();\r\n                    this.toast.add({ severity: 'success', summary: 'Lote actualizado correctamente.', life: 3000 });\r\n                }\r\n            }\r\n        },\r\n        //validacion del editor inline\r\n        async onCellEditComplete(event) {\r\n            let { data, field, newValue, originalValue } = event;\r\n            if (!newValue) {\r\n                newValue = data[field];\r\n            } else {\r\n                if (field == 'lotetypeId' && this.selectedLoteType && this.selectedLoteType.id) {\r\n                    data.lotetypeId = this.itemsLoteTypes.find(item => item.id === this.selectedLoteType.id);\r\n                    data.cuotatypeId = this.itemsCuotaTypes.find(item => item.id === data.cuotatypeId);\r\n                } else if (field == 'cuotatypeId' && this.selectedCuotaType && this.selectedCuotaType.id) {\r\n                    data.cuotatypeId = this.itemsCuotaTypes.find(item => item.id === this.selectedCuotaType.id);\r\n                    data.lotetypeId = this.itemsLoteTypes.find(item => item.id === data.lotetypeId);\r\n                } else {  //name y description casos especiales \r\n                    data[field] = newValue;\r\n                    data.cuotatypeId = this.itemsCuotaTypes.find(item => item.id === data.cuotatypeId);\r\n                    data.lotetypeId = this.itemsLoteTypes.find(item => item.id === data.lotetypeId);\r\n                }\r\n                this.initialValues = data;\r\n                this.initialValues.condominio = this.selectedCondominio;\r\n                this.initialValues.users = null;\r\n                await this.updateLote();\r\n                await this.refreshTable();\r\n            }\r\n        },\r\n        isNameValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.name = 'El nombre es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 40) {\r\n                this.errors.name = 'El nombre no puede tener mas de 40 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        isDescriptionValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.description = 'La descripcion es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 60) {\r\n                this.errors.description = 'La descripcion no puede tener mas de 60 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        exportExcel() {\r\n            if (this.items.length === 0) {\r\n                this.toast.add({ severity: 'warn', summary: 'No hay datos para exportar.', life: 3000 });\r\n            } else {\r\n                //arregla titulo de columnas datos\r\n                const itemsExport = this.items.map(item => {\r\n                    return {\r\n                        Nombre: item.name,\r\n                        Descripcion: item.description,\r\n                        Tipo: item.lotetypeName,\r\n                        Cuota: item.cuotatypeName\r\n                    };\r\n                });\r\n                const worksheet = XLSX.utils.json_to_sheet(itemsExport);\r\n                const workbook = XLSX.utils.book_new();\r\n                XLSX.utils.book_append_sheet(workbook, worksheet, 'lotes');\r\n\r\n                // Genera el archivo binario\r\n                const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n                const data = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n\r\n                // Descarga el archivo\r\n                saveAs(data, 'Listado de lotes.xlsx');\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        selectedCondominio(newValue, oldValue) {\r\n            this.refreshTable();\r\n            this.selectedItems = null;\r\n            this.getTiposLote();\r\n            this.getTiposCuota();\r\n        }\r\n    },\r\n    mounted() {\r\n        this.refreshTable();\r\n        this.getTiposLote();\r\n        this.getTiposCuota();\r\n    },\r\n}\r\n\r\n</script>\r\n\r\n<style scope>\r\ninput,\r\nselect {\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.formButtons {\r\n    align-items: center;\r\n    align-content: center;\r\n\r\n}\r\n</style>","import { render } from \"./Lotes.vue?vue&type=template&id=792ef86c\"\nimport script from \"./Lotes.vue?vue&type=script&lang=js\"\nexport * from \"./Lotes.vue?vue&type=script&lang=js\"\n\nimport \"./Lotes.vue?vue&type=style&index=0&id=792ef86c&scope=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <Toast />\r\n    <ConfirmPopup></ConfirmPopup>\r\n    <div style=\"width: 90%;\">\r\n        <TableBar :showIcons=\"[1, 0, 1, 1, 1]\" @addItem=\"addItem\" @deleteItem=\"deleteItem\" @refreshTable=\"refreshTable\"\r\n            @exportExcel=\"exportExcel\" />\r\n\r\n        <DataTable v-model:selection=\"selectedItems\" :value=\"items\" sortField=\"id\" stripedRows size=\"small\" paginator\r\n            :rows=\"10\" selectionMode=\"multiple\" :metaKeySelection=\"metaKey\" dataKey=\"id\" editMode=\"cell\"\r\n            @cell-edit-complete=\"onCellEditComplete\" :pt=\"{\r\n                table: { style: 'min-width: 50rem' },\r\n                column: {\r\n                    bodycell: ({ state }) => ({\r\n                        class: [{ '!py-0': state['d_editing'] }]\r\n                    })\r\n                }\r\n            }\">\r\n            <template #empty> No existen datos para esta tabla. </template>\r\n            <template #loading> Cargando informacion.... </template>\r\n            <Column selectionMode=\"multiple\" style=\"width: 2%\"></Column>\r\n\r\n            <Column field=\"name\" header=\"Nombre\" style=\"width: 48%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ data.name }}\r\n                </template>\r\n                <template #editor=\"{ data, field }\">\r\n                    <InputText v-model=\"data.name\" autofocus fluid size=\"small\" @keydown.enter=\"$event.target.blur()\"\r\n                        :class=\"{ 'p-invalid': !isNameValid(data, field) }\" />\r\n                    <Message v-if=\"!data.name\" severity=\"error\" size=\"small\" variant=\"simple\">{{ errors.name }}\r\n                    </Message>\r\n                </template>\r\n            </Column>\r\n            <Column field=\"description\" header=\"Descripcion\" style=\"width: 48%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ data.description }}\r\n                </template>\r\n                <template #editor=\"{ data, field }\">\r\n                    <InputText v-model=\"data.description\" autofocus fluid size=\"small\"\r\n                        @keydown.enter=\"$event.target.blur()\"\r\n                        :class=\"{ 'p-invalid': !isDescriptionValid(data, field) }\" />\r\n                    <Message v-if=\"!data.description\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        errors.description }}\r\n                    </Message>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n    </div>\r\n\r\n\r\n    <!-- Add  -->\r\n    <Dialog v-model:visible=\"showAdd\" modal :header=\"titulo\" :style=\"{ width: '25rem' }\">\r\n        <div class=\"form\">\r\n            <Form v-slot=\"$form\" v-bind:initialValues=\"initialValues\" v-bind:resolver=\"resolver\"\r\n                :validateOnValueUpdate=\"false\" :validateOnBlur=\"false\" @submit=\"onFormSubmit\"\r\n                class=\"flex flex-col gap-4 w-full sm:w-56\">\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"name\" type=\"text\" placeholder=\"Nombre\" fluid />\r\n                    <Message v-if=\"$form.name?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.name.error.message }}</Message>\r\n                </div>\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"description\" type=\"text\" placeholder=\"Descripcion\" fluid />\r\n                    <Message v-if=\"$form.description?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.description.error.message }}</Message>\r\n                </div>\r\n\r\n                <div class=\"formButtons\">\r\n                    <Button type=\"button\" label=\"Cancelar\" severity=\"secondary\" @click=\"showAdd = false\"\r\n                        style=\"margin-top: 20px;\"></Button>\r\n                    <Button type=\"submit\" label=\"Guardar\" style=\"margin-left: 20px;\"></Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\n\r\nimport apiService from '@/service/apiService';\r\nimport { ref } from 'vue';\r\nimport TableBar from '@/components/TableBar.vue';\r\nimport { Button, Column, ConfirmPopup, DataTable, Dialog, InputText, Message, Select, Toast } from 'primevue';\r\nimport { Form } from '@primevue/forms';\r\nimport { useToast } from 'primevue/usetoast';\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport default {\r\n    props: {\r\n        selectedCondominio: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n    },\r\n    components: {\r\n        DataTable, Column, TableBar, Dialog, InputText, Button, Form, Select, Message, ConfirmPopup, Toast\r\n    },\r\n    data() {\r\n        return {\r\n            titulo: ref(''),\r\n            confirm: useConfirm(),\r\n            toast: useToast(),\r\n            selectedItems: ref([]),\r\n            metaKey: ref(true),\r\n            items: ref([]),\r\n            showAdd: ref(false),\r\n            newItem: ref(false),\r\n            initialValues: {\r\n                id: 0,\r\n                name: '',\r\n                description: '',\r\n                condominio: null,\r\n            },\r\n            errors: {\r\n                name: '',\r\n                description: ''\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // llamadas al api\r\n        async refreshTable() {\r\n            try {\r\n                if (this.selectedCondominio) {\r\n                    this.items = (await apiService.getTiposLoteByCondominio(this.selectedCondominio.id)).data;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch LotesTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async updateLoteType() {\r\n            try {\r\n                return (await apiService.updateTipoLote(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to update LoteType:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error al actualizar el registro.', life: 3000 });\r\n            }\r\n        },\r\n        async createLoteType() {\r\n            try {\r\n                return (await apiService.createTipoLote(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to create LoteType:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error al crear un nuevo registro.', life: 3000 });\r\n            }\r\n        },\r\n        async deleteLoteType(id) {\r\n            try {\r\n                await apiService.deleteTipoLote(id);\r\n                this.toast.add({ severity: 'info', summary: 'Registros borrados', life: 3000 });\r\n                this.selectedItems = null;\r\n                await this.refreshTable();\r\n            } catch (error) {\r\n                console.error(\"Failed to delete LoteType:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'No se puede borrar el dato, verifique que no tenga dependencias con otros datos.', life: 3000 });\r\n            }\r\n        },\r\n\r\n        // listeners de eventos de la barra de acciones\r\n        addItem() {\r\n             if (!this.selectedCondominio) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un condominio para agregar un tipo de lote.', life: 3000 });\r\n                return;\r\n            }\r\n            this.titulo = 'Agregar nuevo tipo de lote';\r\n            this.initialValues.id = null;\r\n            this.initialValues.name = '';\r\n            this.initialValues.description = '';\r\n            this.showAdd = true;\r\n            this.newItem = true;\r\n        },\r\n        deleteItem(event) {\r\n            if (!this.selectedItems || this.selectedItems.length === 0) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un elemento para borrar.', life: 3000 });\r\n            } else {\r\n                this.confirm.require({\r\n                    target: event.currentTarget,\r\n                    message: 'Desea borrar el/los registros?',\r\n                    icon: 'pi pi-info-circle',\r\n                    rejectProps: {\r\n                        label: 'Cancelar',\r\n                        severity: 'secondary',\r\n                        outlined: true\r\n                    },\r\n                    acceptProps: {\r\n                        label: 'Borrar',\r\n                        severity: 'danger'\r\n                    },\r\n                    accept: () => {\r\n                        for (const item of this.selectedItems) {\r\n                            this.deleteLoteType(item.id);\r\n                            this.items = this.items.filter(itemx => itemx.id !== item.id);\r\n                        }\r\n                    },\r\n                    reject: () => {\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // Acciones del Form \r\n        resolver({ values }) {\r\n            const errors = {};\r\n            if (!values.name) {\r\n                errors.name = [{ message: 'El campo nombre es requerido.' }];\r\n            } else if (values.name.length > 40) {\r\n                errors.name = [{ message: 'El nombre no puede tener mas de 40 caracteres.' }];\r\n            }\r\n            if (!values.description) {\r\n                errors.description = [{ message: 'La descripcion es requerida.' }];\r\n            } else if (values.description.length > 60) {\r\n                errors.description = [{ message: 'La descripcion no puede tener mas de 60 caracteres.' }];\r\n            }\r\n            this.initialValues.name = values.name;\r\n            this.initialValues.description = values.description;\r\n            return {\r\n                errors\r\n            };\r\n        },\r\n        async onFormSubmit({ valid }) {\r\n            if (valid) {\r\n                this.showAdd = false;\r\n                this.selectedItems = [];\r\n                if (this.newItem) {\r\n                    this.initialValues.condominio = this.selectedCondominio;\r\n                    this.initialValues = await this.createLoteType();\r\n                    this.items = [...this.items, this.initialValues];\r\n                    await this.refreshTable();\r\n                    this.toast.add({ severity: 'success', summary: 'Tipo de lote actualizado correctamente.', life: 3000 });\r\n                }\r\n            }\r\n        },\r\n\r\n        //validacion del editor inline\r\n        async onCellEditComplete(event) {\r\n            let { data, field, newValue, originalValue } = event;\r\n            if (!newValue) {\r\n                newValue = data[field];\r\n            } else {\r\n                data[field] = newValue;\r\n                this.initialValues = data;\r\n                this.initialValues.condominio = this.selectedCondominio;\r\n                await this.updateLoteType();\r\n                await this.refreshTable();\r\n            }\r\n        },\r\n        isNameValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.name = 'El nombre es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 40) {\r\n                this.errors.name = 'El nombre no puede tener mas de 40 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        isDescriptionValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.description = 'La descripcion es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 60) {\r\n                this.errors.description = 'La descripcion no puede tener mas de 60 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        exportExcel() {\r\n            if (this.items.length === 0) {\r\n                this.toast.add({ severity: 'warn', summary: 'No hay datos para exportar.', life: 3000 });\r\n            } else {\r\n                //arregla titulo de columnas datos\r\n                const itemsExport = this.items.map(item => {\r\n                    return {\r\n                        Nombre: item.name,\r\n                        Descripcion: item.description\r\n                    };\r\n                });\r\n                \r\n                const worksheet = XLSX.utils.json_to_sheet(itemsExport);\r\n                const workbook = XLSX.utils.book_new();\r\n                XLSX.utils.book_append_sheet(workbook, worksheet, 'Tipos de lotes');\r\n\r\n                // Genera el archivo binario\r\n                const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n                const data = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n\r\n                // Descarga el archivo\r\n                saveAs(data, 'Tipos de lotes.xlsx');\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        selectedCondominio(newValue, oldValue) {\r\n            this.refreshTable();\r\n            this.selectedItems = null;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.refreshTable();\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scope>\r\ninput,\r\nselect {\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.formButtons {\r\n    align-items: center;\r\n    align-content: center;\r\n\r\n}\r\n</style>","import { render } from \"./TipoLotes.vue?vue&type=template&id=317a2773\"\nimport script from \"./TipoLotes.vue?vue&type=script&lang=js\"\nexport * from \"./TipoLotes.vue?vue&type=script&lang=js\"\n\nimport \"./TipoLotes.vue?vue&type=style&index=0&id=317a2773&scope=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <Toast />\r\n    <ConfirmPopup></ConfirmPopup>\r\n    <div style=\"width: 90%;\">\r\n        <TableBar :showIcons=\"[1, 0, 1, 1, 1]\" @addItem=\"addItem\" @deleteItem=\"deleteItem\" @refreshTable=\"refreshTable\"\r\n            @exportExcel=\"exportExcel\" />\r\n\r\n        <DataTable v-model:selection=\"selectedItems\" :value=\"items\" sortField=\"id\" stripedRows size=\"small\" paginator\r\n            :rows=\"10\" selectionMode=\"multiple\" :metaKeySelection=\"metaKey\" dataKey=\"id\" editMode=\"cell\"\r\n            @cell-edit-complete=\"onCellEditComplete\" :pt=\"{\r\n                table: { style: 'min-width: 50rem' },\r\n                column: {\r\n                    bodycell: ({ state }) => ({\r\n                        class: [{ '!py-0': state['d_editing'] }]\r\n                    })\r\n                }\r\n            }\">\r\n            <template #empty> No existen datos para esta tabla. </template>\r\n            <template #loading> Cargando informacion.... </template>\r\n            <Column selectionMode=\"multiple\" style=\"width: 2%\"></Column>\r\n\r\n            <Column field=\"name\" header=\"Nombre\" style=\"width: 30%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ data.name }}\r\n                </template>\r\n                <template #editor=\"{ data, field }\">\r\n                    <InputText v-model=\"data.name\" autofocus fluid size=\"small\" @keydown.enter=\"$event.target.blur()\"\r\n                        :class=\"{ 'p-invalid': !isNameValid(data, field) }\" />\r\n                    <Message v-if=\"!data.name\" severity=\"error\" size=\"small\" variant=\"simple\">{{ errors.name }}\r\n                    </Message>\r\n                </template>\r\n            </Column>\r\n            <Column field=\"amount\" header=\"Monto\" style=\"width: 30%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ formatCurrency(data.amount) }}\r\n                </template>\r\n                <template #editor=\"{ data, field }\">\r\n                    <InputText v-model=\"data.amount\" autofocus fluid size=\"small\" @keydown.enter=\"$event.target.blur()\"\r\n                        :class=\"{ 'p-invalid': !isAmountValid(data, field) }\" />\r\n                    <Message v-if=\"!data.amount\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        errors.amount }}\r\n                    </Message>\r\n                </template>\r\n            </Column>\r\n            <Column field=\"description\" header=\"Descripcion\" style=\"width: 30%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ data.description }}\r\n                </template>\r\n                <template #editor=\"{ data, field }\">\r\n                    <InputText v-model=\"data.description\" autofocus fluid size=\"small\"\r\n                        @keydown.enter=\"$event.target.blur()\"\r\n                        :class=\"{ 'p-invalid': !isDescriptionValid(data, field) }\" />\r\n                    <Message v-if=\"!data.description\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        errors.description }}\r\n                    </Message>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n    </div>\r\n\r\n\r\n    <!-- Add  -->\r\n    <Dialog v-model:visible=\"showAdd\" modal :header=\"titulo\" :style=\"{ width: '25rem' }\">\r\n        <div class=\"form\">\r\n            <Form v-slot=\"$form\" v-bind:initialValues=\"initialValues\" v-bind:resolver=\"resolver\"\r\n                :validateOnValueUpdate=\"false\" :validateOnBlur=\"false\" @submit=\"onFormSubmit\"\r\n                class=\"flex flex-col gap-4 w-full sm:w-56\">\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"name\" type=\"text\" placeholder=\"Nombre\" fluid />\r\n                    <Message v-if=\"$form.name?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.name.error.message }}</Message>\r\n                </div>\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"amount\" type=\"number\" placeholder=\"Monto\" fluid />\r\n                    <Message v-if=\"$form.amount?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.amount.error.message }}</Message>\r\n                </div>\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"description\" type=\"text\" placeholder=\"Descripcion\" fluid />\r\n                    <Message v-if=\"$form.description?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.description.error.message }}</Message>\r\n                </div>\r\n\r\n                <div class=\"formButtons\">\r\n                    <Button type=\"button\" label=\"Cancelar\" severity=\"secondary\" @click=\"showAdd = false\"\r\n                        style=\"margin-top: 20px;\"></Button>\r\n                    <Button type=\"submit\" label=\"Guardar\" style=\"margin-left: 20px;\"></Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    </Dialog>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport apiService from '@/service/apiService';\r\nimport { ref } from 'vue';\r\nimport TableBar from '@/components/TableBar.vue';\r\nimport { Button, Column, ConfirmPopup, DataTable, Dialog, InputText, Message, Select, Toast } from 'primevue';\r\nimport { Form } from '@primevue/forms';\r\nimport { useToast } from 'primevue/usetoast';\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport default {\r\n    props: {\r\n        selectedCondominio: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n    },\r\n    components: {\r\n        DataTable, Column, TableBar, Dialog, InputText, Button, Form, Select, Message, ConfirmPopup, Toast\r\n    },\r\n    data() {\r\n        return {\r\n            titulo: ref(''),\r\n            confirm: useConfirm(),\r\n            toast: useToast(),\r\n            selectedItems: ref([]),\r\n            metaKey: ref(true),\r\n            items: ref([]),\r\n            showAdd: ref(false),\r\n            newItem: ref(false),\r\n            initialValues: {\r\n                id: 0,\r\n                name: '',\r\n                amount: 0,\r\n                description: ''\r\n            },\r\n            errors: {\r\n                name: '',\r\n                description: '',\r\n                amount: ''\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // llamadas al api\r\n        async refreshTable() {\r\n            try {\r\n                if (this.selectedCondominio) {\r\n                    this.items = (await apiService.getTiposCuotaByCondominio(this.selectedCondominio.id)).data;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch CuotaTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async updateCuotaType() {\r\n            try {\r\n                return (await apiService.updateTipoCuota(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to update CuotaTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error al actualizar el registro.', life: 3000 });\r\n            }\r\n        },\r\n        async createCuotaType() {\r\n            try {\r\n                return (await apiService.createTipoCuota(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to create CuotaTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error al crear un nuevo registro.', life: 3000 });\r\n            }\r\n        },\r\n        async deleteCuotaType(id) {\r\n            try {\r\n                await apiService.deleteTipoCuota(id);\r\n                this.toast.add({ severity: 'info', summary: 'Registros borrados', life: 3000 });\r\n                 this.selectedItems = null;\r\n                await this.refreshTable();\r\n            } catch (error) {\r\n                console.error(\"Failed to delete CuotaTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'No se puede borrar el dato, verifique que no tenga dependencias con otros datos.', life: 3000 });               \r\n            }\r\n        },\r\n        formatCurrency(value) {\r\n            return '$ ' + value.toLocaleString('es-MX', {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2\r\n            });\r\n        },\r\n\r\n\r\n        // listeners de eventos de la barra de acciones\r\n        addItem() {\r\n             if (!this.selectedCondominio) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un condominio para agregar un tipo de cuota.', life: 3000 });\r\n                return;\r\n            }\r\n            this.titulo = 'Agregar nueva cuota';\r\n            this.initialValues.id = null;\r\n            this.initialValues.name = '';\r\n            this.initialValues.description = '';\r\n            this.initialValues.amount = 0;\r\n            this.showAdd = true;\r\n            this.newItem = true;\r\n        },\r\n        deleteItem(event) {\r\n            if (!this.selectedItems || this.selectedItems.length === 0) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un elemento para borrar.', life: 3000 });\r\n            } else {\r\n                this.confirm.require({\r\n                    target: event.currentTarget,\r\n                    message: 'Desea borrar el/los registros?',\r\n                    icon: 'pi pi-info-circle',\r\n                    rejectProps: {\r\n                        label: 'Cancelar',\r\n                        severity: 'secondary',\r\n                        outlined: true\r\n                    },\r\n                    acceptProps: {\r\n                        label: 'Borrar',\r\n                        severity: 'danger'\r\n                    },\r\n                    accept: () => {\r\n                        for (const item of this.selectedItems) {\r\n                            this.deleteCuotaType(item.id);\r\n                            this.items = this.items.filter(itemx => itemx.id !== item.id);\r\n                        }\r\n                    },\r\n                    reject: () => {\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // Acciones del Form \r\n        resolver({ values }) {\r\n            const errors = {};\r\n            if (!values.name) {\r\n                errors.name = [{ message: 'EL campo nombre es requerido.' }];\r\n            } else if (values.name.length > 40) {\r\n                errors.name = [{ message: 'El nombre no puede tener mas de 40 caracteres.' }];\r\n            }\r\n            if (!values.amount) {\r\n                errors.amount = [{ message: 'El monto es requerido.' }];\r\n            } else if (values.amount <= 0) {\r\n                errors.amount = [{ message: 'El monto debe de ser mayor a cero.' }];\r\n            }\r\n            if (!values.description) {\r\n                errors.description = [{ message: 'La descripcion es requerida.' }];\r\n            } else if (values.description.length > 60) {\r\n                errors.description = [{ message: 'La descripcion no puede tener mas de 60 caracteres.' }];\r\n            }\r\n            this.initialValues.name = values.name;\r\n            this.initialValues.description = values.description;\r\n            this.initialValues.amount = values.amount;\r\n            return {\r\n                errors\r\n            };\r\n        },\r\n        async onFormSubmit({ valid }) {\r\n            if (valid) {\r\n                this.showAdd = false;\r\n                this.selectedItems = [];\r\n                if (this.newItem) {\r\n                    this.initialValues.condominio = this.selectedCondominio;\r\n                    this.initialValues = await this.createCuotaType();\r\n                    this.items = [...this.items, this.initialValues];\r\n                    this.refreshTable();\r\n                    this.toast.add({ severity: 'success', summary: 'Tipo de cuota actualizado correctamente.', life: 3000 });\r\n                }\r\n            }\r\n        },\r\n\r\n        //validacion del editor inline\r\n        async onCellEditComplete(event) {\r\n            let { data, field, newValue, originalValue } = event;\r\n            if (!newValue) {\r\n                newValue = data[field];\r\n            } else {\r\n                data[field] = newValue;\r\n                this.initialValues = data;\r\n                this.initialValues.condominio = this.selectedCondominio;\r\n                await this.updateCuotaType();\r\n                await this.refreshTable();\r\n            }\r\n        },\r\n        isNameValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.name = 'El nombre es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 40) {\r\n                this.errors.name = 'El nombre no puede tener mas de 40 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        isDescriptionValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.description = 'La descripcion es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 60) {\r\n                this.errors.description = 'La descripcion no puede tener mas de 60 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        isAmountValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.amount = 'El monto es un campo requerido.';\r\n                return false;\r\n            } else if (data[field] <= 0) {\r\n                this.errors.amount = 'El monto debe de ser mayor a cero.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        exportExcel() {\r\n            if (this.items.length === 0) {\r\n                this.toast.add({ severity: 'warn', summary: 'No hay datos para exportar.', life: 3000 });\r\n            } else {\r\n                //arregla titulo de columnas datos\r\n                const itemsExport = this.items.map(item => {\r\n                    return {\r\n                        Nombre: item.name,\r\n                        Monto: item.amount,\r\n                        Descripcion: item.description\r\n                    };\r\n                });\r\n                const worksheet = XLSX.utils.json_to_sheet(itemsExport);\r\n                const workbook = XLSX.utils.book_new();\r\n                XLSX.utils.book_append_sheet(workbook, worksheet, 'Cuotas');\r\n\r\n                // Genera el archivo binario\r\n                const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n                const data = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n\r\n                // Descarga el archivo\r\n                saveAs(data, 'Cuotas de lotes.xlsx');\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        selectedCondominio(newValue, oldValue) {\r\n            this.refreshTable();\r\n            this.selectedItems = null;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.refreshTable();\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scope>\r\ninput,\r\nselect {\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.formButtons {\r\n    align-items: center;\r\n    align-content: center;\r\n}\r\n</style>","import { render } from \"./TipoCuotas.vue?vue&type=template&id=34e964be\"\nimport script from \"./TipoCuotas.vue?vue&type=script&lang=js\"\nexport * from \"./TipoCuotas.vue?vue&type=script&lang=js\"\n\nimport \"./TipoCuotas.vue?vue&type=style&index=0&id=34e964be&scope=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <Toast />\r\n    <ConfirmPopup></ConfirmPopup>\r\n    <div style=\"width: 80%;\">\r\n        <TableBar :showIcons=\"[1, 0, 1, 1, 1]\" @addItem=\"addItem\" @deleteItem=\"deleteItem\" @refreshTable=\"refreshTable\"\r\n            @exportExcel=\"exportExcel\" />\r\n        <DataTable v-model:selection=\"selectedItems\" :value=\"items\" sortField=\"id\" stripedRows size=\"small\" paginator\r\n            :rows=\"10\" selectionMode=\"multiple\" :metaKeySelection=\"metaKey\" dataKey=\"id\">\r\n            <template #empty> No existen datos para esta tabla. </template>\r\n            <template #loading> Cargando informacion.... </template>\r\n            <Column selectionMode=\"multiple\" style=\"width: 5%;\"></Column>\r\n            <Column field=\"name\" header=\"Nombre\" style=\"width: 15%;\"></Column>\r\n            <Column field=\"email\" header=\"Correo\" style=\"width: 15%;\"></Column>\r\n            <Column field=\"phone\" header=\"Telefono\" style=\"width: 15%;\"></Column>\r\n            <Column field=\"adderss\" header=\"Direccion\" style=\"width: 15%;\"></Column>\r\n            <Column field=\"lotesNames\" header=\"Lotes Asociados\" style=\"width: 15%;\"></Column>\r\n            <Column header=\"Resetear Contrasena\" style=\"width: 15%; text-align: center;\">\r\n                <template #body=\"{ data }\">\r\n                    <Button icon=\"pi pi-plus\" variant=\"text\" v-tooltip.top=\"'Resetear Contrasena'\"\r\n                        @click=\"resetPassword(data.id)\">\r\n                    </Button>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n    </div>\r\n\r\n\r\n    <!-- Add / Edit item -->\r\n    <Dialog v-model:visible=\"showAdd\" modal :header=\"titulo\" :style=\"{ width: '25rem' }\">\r\n        <div class=\"form\">\r\n            <Form v-slot=\"$form\" v-bind:initialValues=\"initialValues\" v-bind:resolver=\"resolver\"\r\n                :validateOnValueUpdate=\"false\" :validateOnBlur=\"false\" @submit=\"onFormSubmit\"\r\n                class=\"flex flex-col gap-4 w-full sm:w-56\">\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"name\" type=\"text\" placeholder=\"Nombre\" fluid />\r\n                    <Message v-if=\"$form.name?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.name.error.message }}</Message>\r\n                </div>\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"email\" type=\"text\" placeholder=\"Correo\" fluid />\r\n                    <Message v-if=\"$form.email?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.email.error.message }}</Message>\r\n                </div>\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"phone\" type=\"text\" placeholder=\"Telefono\" fluid />\r\n                    <Message v-if=\"$form.phone?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.phone.error.message }}</Message>\r\n                </div>\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"address\" type=\"text\" placeholder=\"Direccion\" fluid />\r\n                    <Message v-if=\"$form.address?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.address.error.message }}</Message>\r\n                </div>\r\n                <Select name=\"lote\" :options=\"itemsLote\" optionLabel=\"name\" placeholder=\"Lote\" fluid\r\n                    style=\" margin-bottom: 10px;    margin-top: 10px;\">\r\n                </Select>\r\n                <Message v-if=\"$form.lote?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                    $form.lote.error.message }}</Message>\r\n\r\n\r\n                <div class=\"formButtons\">\r\n                    <Button type=\"button\" label=\"Cancelar\" severity=\"secondary\" @click=\"showAdd = false\"\r\n                        style=\"margin-top: 20px;\"></Button>\r\n                    <Button type=\"submit\" label=\"Guardar\" style=\"margin-left: 20px;\"></Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\n\r\nimport apiService from '@/service/apiService';\r\nimport { ref } from 'vue';\r\nimport TableBar from '@/components/TableBar.vue';\r\nimport { Button, Column, ConfirmPopup, DataTable, Dialog, InputText, Message, Select, Toast } from 'primevue';\r\nimport { Form } from '@primevue/forms';\r\nimport { useToast } from 'primevue/usetoast';\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport default {\r\n    props: {\r\n        selectedCondominio: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n    },\r\n    components: {\r\n        DataTable, Column, TableBar, Dialog, InputText, Button, Form, Select, Message, ConfirmPopup, Toast\r\n    },\r\n    data() {\r\n        return {\r\n            titulo: ref(''),\r\n            confirm: useConfirm(),\r\n            toast: useToast(),\r\n            selectedItems: ref([]),\r\n            metaKey: ref(true),\r\n            items: ref([]),\r\n            itemsLote: ref([]),\r\n            showAdd: ref(false),\r\n            newItem: ref(false),\r\n            initialValues: {\r\n                id: 0,\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                address: '',\r\n                lote: null\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // llamadas al api\r\n        async refreshTable() {\r\n            try {\r\n                if (this.selectedCondominio) {\r\n                    this.items = (await apiService.getUsuariosByCondominio(this.selectedCondominio.id)).data;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch Usuarios:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async getLotes() {\r\n            try {\r\n                this.itemsLote = (await apiService.getLotesByCondominio(this.selectedCondominio.id)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch Lotes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async updateUsuario() {\r\n            try {\r\n                return (await apiService.updateUsuario(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to update Usuario:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async createUsuario() {\r\n            try {\r\n                return (await apiService.createUsuario(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to create Usuario:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async deleteUsuario(id) {\r\n            try {\r\n                await apiService.deleteUsuario(id);\r\n                this.toast.add({ severity: 'info', summary: 'Registros borrados', life: 3000 });\r\n                this.selectedItems = null;\r\n                await this.refreshTable();\r\n            } catch (error) {\r\n                console.error(\"Failed to delete Usuario:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'No se puede borrar el dato, verifique que no tenga dependencias con otros datos.', life: 3000 });\r\n            }\r\n        },\r\n\r\n        resetPassword(id) {\r\n            console.log('reste passsword id usuario ' + id);\r\n        },\r\n\r\n        // listeners de eventos de la barra de acciones\r\n        addItem() {\r\n            if (!this.selectedCondominio) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un condominio para agregar un usuario.', life: 3000 });\r\n                return;\r\n            }\r\n            this.titulo = 'Agregar nuevo usuario';\r\n            this.getLotes();\r\n            this.initialValues.id = null;\r\n            this.initialValues.name = '';\r\n            this.initialValues.email = '';\r\n            this.initialValues.phone = '';\r\n            this.initialValues.address = '';\r\n            this.initialValues.lote = null;\r\n            this.showAdd = true;\r\n            this.newItem = true;\r\n        },\r\n\r\n        deleteItem(event) {\r\n            if (!this.selectedItems || this.selectedItems.length === 0) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un elemento para borrar.', life: 3000 });\r\n            } else {\r\n                this.confirm.require({\r\n                    target: event.currentTarget,\r\n                    message: 'Desea borrar el/los registros?',\r\n                    icon: 'pi pi-info-circle',\r\n                    rejectProps: {\r\n                        label: 'Cancelar',\r\n                        severity: 'secondary',\r\n                        outlined: true\r\n                    },\r\n                    acceptProps: {\r\n                        label: 'Borrar',\r\n                        severity: 'danger'\r\n                    },\r\n                    accept: () => {\r\n                        for (const item of this.selectedItems) {\r\n                            this.deleteUsuario(item.id);\r\n                            this.items = this.items.filter(itemx => itemx.id !== item.id);\r\n                        }\r\n                    },\r\n                    reject: () => {\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // Acciones del Form \r\n        resolver({ values }) {\r\n            const errors = {};\r\n            if (!values.name) {\r\n                errors.name = [{ message: 'El nombre es requerido.' }];\r\n            } else if (values.name.length > 40) {\r\n                errors.name = [{ message: 'El nombre no puede tener mas de 40 caracteres.' }];\r\n            }\r\n            if (!values.email) {\r\n                errors.email = [{ message: 'El email es requerido.' }];\r\n            } else if (values.email.length > 60) {\r\n                errors.email = [{ message: 'El email no puede tener mas de 60 caracteres.' }];\r\n            }\r\n            if (values.phone.length != 10) {\r\n                errors.phone = [{ message: 'El telefono debe de sr de 10 digitos.' }];\r\n            }\r\n            if (values.address.length != 100) {\r\n                errors.address = [{ message: 'La direccion no puede ser mayor a 100 caracteres.' }];\r\n            }\r\n            if (!values.lote) {\r\n                errors.lote = [{ message: 'El lote es requerido.' }];\r\n            }\r\n            this.initialValues.name = values.name;\r\n            this.initialValues.email = values.email;\r\n            this.initialValues.phone = values.phone;\r\n            this.initialValues.address = values.address;\r\n            this.initialValues.lote = values.lote;\r\n            return {\r\n                errors\r\n            };\r\n        },\r\n        async onFormSubmit({ valid }) {\r\n            if (valid) {\r\n                this.showAdd = false;\r\n                this.selectedItems = [];\r\n                if (this.newItem) {\r\n                    this.initialValues = await this.createUsuario();\r\n                    this.items = [...this.items, this.initialValues];\r\n                    this.refreshTable();\r\n                    this.toast.add({ severity: 'success', summary: 'Contacto actualizado correctamente.', life: 3000 });\r\n                }\r\n            }\r\n        },\r\n        //validacion del editor inline\r\n        async onCellEditComplete(event) {\r\n            let { data, field, newValue, originalValue } = event;\r\n            if (!newValue) {\r\n                newValue = data[field];\r\n            } else {\r\n                data[field] = newValue;\r\n                this.initialValues = data;\r\n                this.initialValues.condominio = this.selectedCondominio;\r\n                await this.updateUsuario();\r\n                await this.refreshTable();\r\n            }\r\n        },\r\n        isNameValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.name = 'El nombre es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 40) {\r\n                this.errors.name = 'El nombre no puede tener mas de 40 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        isDescriptionValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.description = 'La descripcion es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 60) {\r\n                this.errors.description = 'La descripcion no puede tener mas de 60 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        exportExcel() {\r\n            if (this.items.length === 0) {\r\n                this.toast.add({ severity: 'warn', summary: 'No hay datos para exportar.', life: 3000 });\r\n            } else {\r\n                //arregla titulo de columnas datos\r\n                const itemsExport = this.items.map(item => {\r\n                    return {\r\n                        Nombre: item.name,\r\n                        Email: item.email,\r\n                        Telefono: item.phone,\r\n                        Direccion: item.adderss,\r\n                        Lote: item.lote\r\n                    };\r\n                });\r\n                const worksheet = XLSX.utils.json_to_sheet(itemsExport);\r\n                const workbook = XLSX.utils.book_new();\r\n                XLSX.utils.book_append_sheet(workbook, worksheet, 'usuarios');\r\n\r\n                // Genera el archivo binario\r\n                const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n                const data = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n\r\n                // Descarga el archivo\r\n                saveAs(data, 'Listado de usuarios.xlsx');\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        selectedCondominio(newValue, oldValue) {\r\n            this.refreshTable();\r\n            this.selectedItems = null;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.refreshTable();\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scope>\r\ninput,\r\nselect {\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.formButtons {\r\n    align-items: center;\r\n    align-content: center;\r\n}\r\n</style>","import { render } from \"./Users.vue?vue&type=template&id=40d5585b\"\nimport script from \"./Users.vue?vue&type=script&lang=js\"\nexport * from \"./Users.vue?vue&type=script&lang=js\"\n\nimport \"./Users.vue?vue&type=style&index=0&id=40d5585b&scope=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <Toast />\r\n    <ConfirmPopup></ConfirmPopup>\r\n    <div style=\"width: 70%; \">\r\n        <div style=\"width: 100%;\">\r\n            <b>Conceptos para cargos</b>\r\n            <TableBar :showIcons=\"[1, 0, 1, 1, 1]\" @addItem=\"addItemC\" @deleteItem=\"deleteItemC\"\r\n                @refreshTable=\"refreshTables\" @exportExcel=\"exportExcel\" />\r\n\r\n            <DataTable v-model:selection=\"selectedItemsC\" :value=\"itemsC\" sortField=\"id\" stripedRows size=\"small\"\r\n                columnResizeMode=\"expand\" paginator :rows=\"10\" selectionMode=\"multiple\" :metaKeySelection=\"metaKeyC\"\r\n                dataKey=\"id\" editMode=\"cell\" @cell-edit-complete=\"onCellEditCompleteC\" :pt=\"{\r\n                    table: { style: 'min-width: 50rem' },\r\n                    column: {\r\n                        bodycell: ({ state }) => ({\r\n                            class: [{ '!py-0': state['d_editing'] }]\r\n                        })\r\n                    }\r\n                }\">\r\n                <template #empty> No existen datos para esta tabla. </template>\r\n                <template #loading> Cargando informacion.... </template>\r\n                <Column selectionMode=\"multiple\" headerStyle=\"width: 2%\"></Column>\r\n                <Column field=\"name\" header=\"Nombre\" headerStyle=\"width: 48%\">\r\n                    <template #body=\"{ data }\">\r\n                        {{ data.name }}\r\n                    </template>\r\n                    <template #editor=\"{ data, field }\">\r\n                        <InputText v-model=\"data.name\" autofocus fluid size=\"small\"\r\n                            @keydown.enter=\"$event.target.blur()\" :class=\"{ 'p-invalid': !isNameValid(data, field) }\" />\r\n                        <Message v-if=\"!isNameValid(data, field)\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                            errors.name }}\r\n                        </Message>\r\n                    </template>\r\n\r\n                </Column>\r\n                <Column field=\"description\" header=\"Descripcion\" headerStyle=\"width: 50%\">\r\n                    <template #body=\"{ data }\">\r\n                        {{ data.description }}\r\n                    </template>\r\n                    <template #editor=\"{ data, field }\">\r\n                        <InputText v-model=\"data.description\" autofocus fluid size=\"small\"\r\n                            @keydown.enter=\"$event.target.blur()\"\r\n                            :class=\"{ 'p-invalid': !isDescriptionValid(data, field) }\" />\r\n                        <Message v-if=\"!isDescriptionValid(data, field)\" severity=\"error\" size=\"small\" variant=\"simple\">\r\n                            {{\r\n                                errors.description }}\r\n                        </Message>\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n        </div>\r\n        <br />\r\n        <hr />\r\n        <div style=\"width: 100%;\">\r\n            <b>Conceptos para abonos</b>\r\n            <TableBar :showIcons=\"[1, 0, 1, 0, 0]\" @addItem=\"addItemA\" @deleteItem=\"deleteItemA\" />\r\n\r\n            <DataTable v-model:selection=\"selectedItemsA\" :value=\"itemsA\" sortField=\"id\" stripedRows size=\"small\"\r\n                paginator :rows=\"10\" selectionMode=\"multiple\" :metaKeySelection=\"metaKeyA\" dataKey=\"id\" editMode=\"cell\"\r\n                @cell-edit-complete=\"onCellEditCompleteA\" :pt=\"{\r\n                    table: { style: 'min-width: 50rem' },\r\n                    column: {\r\n                        bodycell: ({ state }) => ({\r\n                            class: [{ '!py-0': state['d_editing'] }]\r\n                        })\r\n                    }\r\n                }\">\r\n                <template #empty> No existen datos para esta tabla. </template>\r\n                <template #loading> Cargando informacion.... </template>\r\n                <Column selectionMode=\"multiple\" style=\"width: 2%\"></Column>\r\n                <Column field=\"name\" header=\"Nombre\" style=\"width: 30%\">\r\n                    <template #body=\"{ data }\">\r\n                        {{ data.name }}\r\n                    </template>\r\n                    <template #editor=\"{ data, field }\">\r\n                        <InputText v-model=\"data.name\" autofocus fluid size=\"small\"\r\n                            @keydown.enter=\"$event.target.blur()\" :class=\"{ 'p-invalid': !isNameValid(data, field) }\" />\r\n                        <Message v-if=\"!isNameValid(data, field)\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                            errors.name }}\r\n                        </Message>\r\n                    </template>\r\n                </Column>\r\n                <Column field=\"description\" header=\"Descripcion\" style=\"width: 30%\">\r\n                    <template #body=\"{ data }\">\r\n                        {{ data.description }}\r\n                    </template>\r\n                    <template #editor=\"{ data, field }\">\r\n                        <InputText v-model=\"data.description\" autofocus fluid size=\"small\"\r\n                            @keydown.enter=\"$event.target.blur()\"\r\n                            :class=\"{ 'p-invalid': !isDescriptionValid(data, field) }\" />\r\n                        <Message v-if=\"!isDescriptionValid(data, field)\" severity=\"error\" size=\"small\" variant=\"simple\">\r\n                            {{\r\n                                errors.description }}\r\n                        </Message>\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n    <!-- Add  -->\r\n    <Dialog v-model:visible=\"showAdd\" modal :header=\"titulo\" :style=\"{ width: '25rem' }\">\r\n        <div class=\"form\">\r\n            <Form v-slot=\"$form\" v-bind:initialValues=\"initialValues\" v-bind:resolver=\"resolver\"\r\n                :validateOnValueUpdate=\"false\" :validateOnBlur=\"false\" @submit=\"onFormSubmit\"\r\n                class=\"flex flex-col gap-4 w-full sm:w-56\">\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"name\" type=\"text\" placeholder=\"Nombre\" fluid />\r\n                    <Message v-if=\"$form.name?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.name.error.message }}</Message>\r\n                </div>\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"description\" type=\"text\" placeholder=\"Descripcion\" fluid />\r\n                    <Message v-if=\"$form.description?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.description.error.message }}</Message>\r\n                </div>\r\n                <div class=\"formButtons\">\r\n                    <Button type=\"button\" label=\"Cancelar\" severity=\"secondary\" @click=\"showAdd = false\"\r\n                        style=\"margin-top: 20px;\"></Button>\r\n                    <Button type=\"submit\" label=\"Guardar\" style=\"margin-left: 20px;\"></Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    </Dialog>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport apiService from '@/service/apiService';\r\nimport { ref } from 'vue';\r\nimport TableBar from '@/components/TableBar.vue';\r\nimport { Button, Column, ConfirmPopup, DataTable, Dialog, InputText, Message, Select, Toast } from 'primevue';\r\nimport { Form } from '@primevue/forms';\r\nimport { useToast } from 'primevue/usetoast';\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport default {\r\n    props: {\r\n        selectedCondominio: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n    },\r\n    components: {\r\n        DataTable, Column, TableBar, Dialog, InputText, Button, Form, Select, Message, ConfirmPopup, Toast\r\n    },\r\n    data() {\r\n        return {\r\n            titulo: ref(''),\r\n            confirm: useConfirm(),\r\n            toast: useToast(),\r\n            itemsC: ref([]),\r\n            itemsA: ref([]),\r\n            metaKeyC: ref(true),\r\n            metaKeyA: ref(true),\r\n            selectedItemsC: ref([]),\r\n            selectedItemsA: ref([]),\r\n\r\n            showAdd: ref(false),\r\n            newItem: ref(false),\r\n            isC: null,\r\n\r\n\r\n            initialValues: {\r\n                id: 0,\r\n                name: '',\r\n                description: '',\r\n                tipo: ''\r\n            },\r\n            errors: {\r\n                name: '',\r\n                description: ''\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // llamadas al api\r\n        async refreshTables() {\r\n            await this.refreshTableC();\r\n            await this.refreshTableA();\r\n        },\r\n\r\n        async refreshTableC() {\r\n            try {\r\n                if (this.selectedCondominio) {\r\n                    this.itemsC = (await apiService.getTransaccionesLoteTypesByCondominio(this.selectedCondominio.id, 2)).data;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch CuotaTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async refreshTableA() {\r\n            try {\r\n                if (this.selectedCondominio) {\r\n                    this.itemsA = (await apiService.getTransaccionesLoteTypesByCondominio(this.selectedCondominio.id, 1)).data;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch CuotaTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n\r\n        async updateTransaccionesLoteTypes() {\r\n            try {\r\n                return (await apiService.updateTransaccionesLoteTypes(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to update CuotaTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error al actualizar el registro.', life: 3000 });\r\n            }\r\n        },\r\n        async createTransaccionesLoteTypes() {\r\n            try {\r\n                return (await apiService.createTransaccionesLoteTypes(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to create CuotaTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error al crear un nuevo registro.', life: 3000 });\r\n            }\r\n        },\r\n        async deleteTransaccionesLoteTypes(id) {\r\n            try {\r\n                await apiService.deleteTransaccionesLoteTypes(id);\r\n                this.toast.add({ severity: 'info', summary: 'Registros borrados', life: 3000 });\r\n                this.selectedItems = null;\r\n                await this.refreshTable();\r\n            } catch (error) {\r\n                console.error(\"Failed to delete CuotaTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'No se puede borrar el dato, verifique que no tenga dependencias con otros datos.', life: 3000 });\r\n            }\r\n        },\r\n        formatCurrency(value) {\r\n            return '$ ' + value.toLocaleString('es-MX', {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2\r\n            });\r\n        },\r\n\r\n        //   ******************** todo para CARGOS\r\n        // listeners de eventos de la barra de acciones\r\n        addItemC() {\r\n            if (!this.selectedCondominio) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un condominio para agregar un concepto.', life: 3000 });\r\n                return;\r\n            }\r\n            this.titulo = 'Agregar nuevo tipo de cargo';\r\n            this.initialValues.id = null;\r\n            this.initialValues.name = '';\r\n            this.initialValues.description = '';\r\n            this.showAdd = true;\r\n            this.newItem = true;\r\n            this.isC = true;\r\n        },\r\n        deleteItemC(event) {\r\n            if (!this.selectedItemsC || this.selectedItemsC.length === 0) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un elemento para borrar.', life: 3000 });\r\n            } else {\r\n                this.confirm.require({\r\n                    target: event.currentTarget,\r\n                    message: 'Desea borrar el/los registros?',\r\n                    icon: 'pi pi-info-circle',\r\n                    rejectProps: {\r\n                        label: 'Cancelar',\r\n                        severity: 'secondary',\r\n                        outlined: true\r\n                    },\r\n                    acceptProps: {\r\n                        label: 'Borrar',\r\n                        severity: 'danger'\r\n                    },\r\n                    accept: () => {\r\n                        for (const item of this.selectedItemsC) {\r\n                            this.deleteTransaccionesLoteTypes(item.id);\r\n                            this.itemsC = this.itemsC.filter(itemx => itemx.id !== item.id);\r\n                        }\r\n                    },\r\n                    reject: () => {\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // Acciones del Form \r\n        resolver({ values }) {\r\n            const errors = {};\r\n            if (!values.name) {\r\n                errors.name = [{ message: 'EL campo nombre es requerido.' }];\r\n            } else if (values.name.length > 40) {\r\n                errors.name = [{ message: 'El nombre no puede tener mas de 40 caracteres.' }];\r\n            }\r\n            if (!values.description) {\r\n                errors.description = [{ message: 'La descripcion es requerida.' }];\r\n            } else if (values.description.length > 60) {\r\n                errors.description = [{ message: 'La descripcion no puede tener mas de 60 caracteres.' }];\r\n            }\r\n            this.initialValues.name = values.name;\r\n            this.initialValues.description = values.description;\r\n            return {\r\n                errors\r\n            };\r\n        },\r\n        async onFormSubmit({ valid }) {\r\n            if (valid) {\r\n                this.showAdd = false;\r\n                this.selectedItems = [];\r\n                if (this.newItem) {\r\n                    this.initialValues.condominio = this.selectedCondominio;\r\n                    if (this.isC) { // CARGO = 2\r\n                        this.initialValues.tipo = \"CARGO\";\r\n                    } else { // ABONO = 1\r\n                        this.initialValues.tipo = \"ABONO\";\r\n                    }\r\n                    this.initialValues = await this.createTransaccionesLoteTypes();\r\n                    //this.items = [...this.items, this.initialValues];\r\n                    this.refreshTables();\r\n                    this.toast.add({ severity: 'success', summary: 'Tipo de cargo / abono agregado correctamente.', life: 3000 });\r\n                }\r\n            }\r\n        },\r\n\r\n        isNameValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.name = 'El nombre es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 40) {\r\n                this.errors.name = 'El nombre no puede tener mas de 40 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        isDescriptionValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.description = 'La descripcion es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 60) {\r\n                this.errors.description = 'La descripcion no puede tener mas de 60 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        //validacion del editor inline\r\n        async onCellEditCompleteC(event) {\r\n            let { data, field, newValue, originalValue } = event;\r\n            if (!newValue) {\r\n                newValue = data[field];\r\n            } else {\r\n                data[field] = newValue;\r\n                this.initialValues = data;\r\n                this.initialValues.condominio = this.selectedCondominio;\r\n                await this.updateTransaccionesLoteTypes();\r\n                await this.refreshTables();\r\n            }\r\n        },\r\n\r\n        exportExcel() {\r\n            if (this.itemsC.length === 0 && this.itemsA.length === 0) {\r\n                this.toast.add({ severity: 'warn', summary: 'No hay datos para exportar.', life: 3000 });\r\n            } else {\r\n                //arregla titulo de columnas datos\r\n                let itemsCargos = this.itemsC.map(item => {\r\n                    return {\r\n                        Nombre: item.name,\r\n                        'Cargo/Abono': 'Cargo',\r\n                        Descripcion: item.description\r\n                    };\r\n                });\r\n                let itemsAbonos = this.itemsA.map(item => {\r\n                    return {\r\n                        Nombre: item.name,\r\n                        'Cargo/Abono': 'Abono',\r\n                        Descripcion: item.description\r\n                    };\r\n                });\r\n                const itemsExport = [...itemsCargos, ...itemsAbonos];\r\n                const worksheet = XLSX.utils.json_to_sheet(itemsExport);\r\n                const workbook = XLSX.utils.book_new();\r\n                XLSX.utils.book_append_sheet(workbook, worksheet, 'Cargos_Abonos');\r\n\r\n                // Genera el archivo binario\r\n                const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n                const data = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n\r\n                // Descarga el archivo\r\n                saveAs(data, 'Tipos de Cargos-Abonos.xlsx');\r\n            }\r\n        },\r\n\r\n\r\n\r\n        //   ******************** todo para CARGOS\r\n        // listeners de eventos de la barra de acciones\r\n        addItemA() {\r\n            if (!this.selectedCondominio) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un condominio para agregar un concepto.', life: 3000 });\r\n                return;\r\n            }\r\n            this.titulo = 'Agregar nuevo tipo de abono';\r\n            this.initialValues.id = null;\r\n            this.initialValues.name = '';\r\n            this.initialValues.description = '';\r\n            this.showAdd = true;\r\n            this.newItem = true;\r\n            this.isC = false;\r\n        },\r\n        deleteItemA(event) {\r\n            if (!this.selectedItemsA || this.selectedItemsA.length === 0) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un elemento para borrar.', life: 3000 });\r\n            } else {\r\n                this.confirm.require({\r\n                    target: event.currentTarget,\r\n                    message: 'Desea borrar el/los registros?',\r\n                    icon: 'pi pi-info-circle',\r\n                    rejectProps: {\r\n                        label: 'Cancelar',\r\n                        severity: 'secondary',\r\n                        outlined: true\r\n                    },\r\n                    acceptProps: {\r\n                        label: 'Borrar',\r\n                        severity: 'danger'\r\n                    },\r\n                    accept: () => {\r\n                        for (const item of this.selectedItemsA) {\r\n                            this.deleteTransaccionesLoteTypes(item.id);\r\n                            this.itemsA = this.itemsA.filter(itemx => itemx.id !== item.id);\r\n                        }\r\n                    },\r\n                    reject: () => {\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        //validacion del editor inline\r\n        async onCellEditCompleteA(event) {\r\n            let { data, field, newValue, originalValue } = event;\r\n            if (!newValue) {\r\n                newValue = data[field];\r\n            } else {\r\n                data[field] = newValue;\r\n                this.initialValues = data;\r\n                this.initialValues.condominio = this.selectedCondominio;\r\n                await this.updateTransaccionesLoteTypes();\r\n                await this.refreshTables();\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n        selectedCondominio(newValue, oldValue) {\r\n            this.refreshTables();\r\n            this.selectedItemsC = null;\r\n            this.selectedItemsA = null;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.refreshTables();\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scope>\r\ninput,\r\nselect {\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.formButtons {\r\n    align-items: center;\r\n    align-content: center;\r\n}\r\n</style>","import { render } from \"./ConceptosCA.vue?vue&type=template&id=3fbf3e62\"\nimport script from \"./ConceptosCA.vue?vue&type=script&lang=js\"\nexport * from \"./ConceptosCA.vue?vue&type=script&lang=js\"\n\nimport \"./ConceptosCA.vue?vue&type=style&index=0&id=3fbf3e62&scope=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <Toast />\r\n    <ConfirmPopup></ConfirmPopup>\r\n    <div style=\"width: 90%;\">\r\n        <TableBar :showIcons=\"[1, 0, 1, 1, 1]\" @addItem=\"addItem\" @deleteItem=\"deleteItem\" @refreshTable=\"refreshTable\"\r\n            @exportExcel=\"exportExcel\" />\r\n\r\n        <DataTable v-model:selection=\"selectedItems\" :value=\"items\" sortField=\"tipo\" stripedRows size=\"small\" paginator\r\n            :rows=\"10\" selectionMode=\"multiple\" :metaKeySelection=\"metaKey\" dataKey=\"id\" editMode=\"cell\" :sortOrder=\"1\"\r\n            @cell-edit-complete=\"onCellEditComplete\" :pt=\"{\r\n                table: { style: 'min-width: 50rem' },\r\n                column: {\r\n                    bodycell: ({ state }) => ({\r\n                        class: [{ '!py-0': state['d_editing'] }]\r\n                    })\r\n                }\r\n            }\">\r\n            <template #empty> No existen datos para esta tabla. </template>\r\n            <template #loading> Cargando informacion.... </template>\r\n            <Column selectionMode=\"multiple\" style=\"width: 2%\"></Column>\r\n            <Column field=\"tipo\" header=\"Tipo\" style=\"width: 48%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ data.tipo }}\r\n                </template>\r\n                <template #editor=\"{ data }\">\r\n                    <Select name=\"tipos\" :options=\"tipos\" v-model=\"selectedType\" optionLabel=\"value\"\r\n                        placeholder=\"Tipo de lote\" fluid style=\" margin-bottom: 10px;  margin-top: 10px;\"\r\n                        size=\"small\" />\r\n                </template>\r\n            </Column>\r\n            <Column field=\"name\" header=\"Nombre\" style=\"width: 48%\">\r\n                <template #body=\"{ data }\">\r\n                    {{ data.name }}\r\n                </template>\r\n                <template #editor=\"{ data, field }\">\r\n                    <InputText v-model=\"data.name\" autofocus fluid size=\"small\" @keydown.enter=\"$event.target.blur()\"\r\n                        :class=\"{ 'p-invalid': !isNameValid(data, field) }\" />\r\n                    <Message v-if=\"!data.name\" severity=\"error\" size=\"small\" variant=\"simple\">{{ errors.name }}\r\n                    </Message>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n    </div>\r\n\r\n\r\n    <!-- Add  -->\r\n    <Dialog v-model:visible=\"showAdd\" modal :header=\"titulo\" :style=\"{ width: '25rem' }\">\r\n        <div class=\"form\">\r\n            <Form v-slot=\"$form\" v-bind:initialValues=\"initialValues\" v-bind:resolver=\"resolver\"\r\n                :validateOnValueUpdate=\"false\" :validateOnBlur=\"false\" @submit=\"onFormSubmit\"\r\n                class=\"flex flex-col gap-4 w-full sm:w-56\">\r\n\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <Select name=\"tipo\" :options=\"tipos\" placeholder=\"Tipo\" optionLabel=\"value\" fluid />\r\n                    <Message v-if=\"$form.tipo?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.tipo.error.message }}</Message>\r\n                </div>\r\n                <div class=\"flex flex-col gap-1\">\r\n                    <InputText name=\"name\" type=\"text\" placeholder=\"Nombre\" fluid />\r\n                    <Message v-if=\"$form.name?.invalid\" severity=\"error\" size=\"small\" variant=\"simple\">{{\r\n                        $form.name.error.message }}</Message>\r\n                </div>\r\n                <div class=\"formButtons\">\r\n                    <Button type=\"button\" label=\"Cancelar\" severity=\"secondary\" @click=\"showAdd = false\"\r\n                        style=\"margin-top: 20px;\"></Button>\r\n                    <Button type=\"submit\" label=\"Guardar\" style=\"margin-left: 20px;\"></Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\n\r\nimport apiService from '@/service/apiService';\r\nimport { ref } from 'vue';\r\nimport TableBar from '@/components/TableBar.vue';\r\nimport { Button, Column, ConfirmPopup, DataTable, Dialog, InputText, Message, Select, Toast } from 'primevue';\r\nimport { Form } from '@primevue/forms';\r\nimport { useToast } from 'primevue/usetoast';\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport default {\r\n    props: {\r\n        selectedCondominio: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n    },\r\n    components: {\r\n        DataTable, Column, TableBar, Dialog, InputText, Button, Form, Select, Message, ConfirmPopup, Toast\r\n    },\r\n    data() {\r\n        return {\r\n            titulo: ref(''),\r\n            confirm: useConfirm(),\r\n            toast: useToast(),\r\n            selectedItems: ref([]),\r\n            selectedType: ref(),\r\n            metaKey: ref(true),\r\n            items: ref([]),\r\n            showAdd: ref(false),\r\n            newItem: ref(false),\r\n            initialValues: {\r\n                id: 0,\r\n                tipo: '',\r\n                name: '',\r\n                condominio: null,\r\n            },\r\n            errors: {\r\n                name: '',\r\n                tipo: ''\r\n            },\r\n            tipos: [\r\n                { id: 'GASTOS_FIJOS', value: 'Gastos Fijos' },\r\n                { id: 'GASTOS_VARIABLES', value: 'Gastos Variables' },\r\n                { id: 'OTROS', value: 'Otros' }\r\n            ]\r\n        }\r\n    },\r\n    methods: {\r\n        // llamadas al api\r\n        async refreshTable() {\r\n            try {\r\n                if (this.selectedCondominio) {\r\n                    this.items = (await apiService.getTiposEgresosByCondominio(this.selectedCondominio.id)).data;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch EgresoTypes:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error de conexion con el servidor.', life: 3000 });\r\n            }\r\n        },\r\n        async updateEgresoType() {\r\n            try {\r\n                return (await apiService.updateTipoEgreso(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to update EgresoType:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error al actualizar el registro.', life: 3000 });\r\n            }\r\n        },\r\n        async createEgresoType() {\r\n            try {\r\n                return (await apiService.createTipoEgreso(this.initialValues)).data;\r\n            } catch (error) {\r\n                console.error(\"Failed to create EgresoType:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'Error al crear un nuevo registro.', life: 3000 });\r\n            }\r\n        },\r\n        async deleteEgresoType(id) {\r\n            try {\r\n                await apiService.deleteTipoEgreso(id);\r\n                this.toast.add({ severity: 'info', summary: 'Registros borrados', life: 3000 });\r\n                this.selectedItems = null;\r\n                await this.refreshTable();\r\n            } catch (error) {\r\n                console.error(\"Failed to delete EgresoType:\", error);\r\n                this.toast.add({ severity: 'error', summary: 'No se puede borrar el dato, verifique que no tenga dependencias con otros datos.', life: 3000 });\r\n            }\r\n        },\r\n\r\n        // listeners de eventos de la barra de acciones\r\n        addItem() {\r\n            if (!this.selectedCondominio) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un condominio para agregar un tipo de egreso.', life: 3000 });\r\n                return;\r\n            }\r\n            this.titulo = 'Agregar nuevo tipo';\r\n            this.initialValues.id = null;\r\n            this.initialValues.tipo = '';\r\n            this.initialValues.name = '';\r\n            this.selectedType = null;\r\n            this.showAdd = true;\r\n            this.newItem = true;\r\n        },\r\n        deleteItem(event) {\r\n            if (!this.selectedItems || this.selectedItems.length === 0) {\r\n                this.toast.add({ severity: 'error', summary: 'Seleccione un elemento para borrar.', life: 3000 });\r\n            } else {\r\n                this.confirm.require({\r\n                    target: event.currentTarget,\r\n                    message: 'Desea borrar el/los registros?',\r\n                    icon: 'pi pi-info-circle',\r\n                    rejectProps: {\r\n                        label: 'Cancelar',\r\n                        severity: 'secondary',\r\n                        outlined: true\r\n                    },\r\n                    acceptProps: {\r\n                        label: 'Borrar',\r\n                        severity: 'danger'\r\n                    },\r\n                    accept: () => {\r\n                        for (const item of this.selectedItems) {\r\n                            this.deleteEgresoType(item.id);\r\n                            this.items = this.items.filter(itemx => itemx.id !== item.id);\r\n                        }\r\n                    },\r\n                    reject: () => {\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // Acciones del Form \r\n        resolver({ values }) {\r\n            const errors = {};\r\n            if (!values.name) {\r\n                errors.name = [{ message: 'El campo nombre es requerido.' }];\r\n            } else if (values.name.length > 40) {\r\n                errors.name = [{ message: 'El nombre no puede tener mas de 40 caracteres.' }];\r\n            }\r\n            if (!values.tipo) {\r\n                errors.tipo = [{ message: 'El campo tipo es requerido.' }];\r\n            }\r\n            this.initialValues.name = values.name;\r\n            this.initialValues.tipo = values.tipo.id;\r\n            return {\r\n                errors\r\n            };\r\n        },\r\n        async onFormSubmit({ valid }) {\r\n            if (valid) {\r\n                this.showAdd = false;\r\n                this.selectedItems = [];\r\n                if (this.newItem) {\r\n                    this.initialValues.condominio = this.selectedCondominio;\r\n                    this.initialValues = await this.createEgresoType();\r\n                    this.items = [...this.items, this.initialValues];\r\n                    await this.refreshTable();\r\n                    this.toast.add({ severity: 'success', summary: 'Tipo de egreso actualizado correctamente.', life: 3000 });\r\n                }\r\n            }\r\n        },\r\n\r\n        //validacion del editor inline\r\n        async onCellEditComplete(event) {\r\n            let { data, field, newValue, originalValue } = event;\r\n            if (!newValue) {\r\n                newValue = data[field];\r\n            } else {\r\n\r\n                console.log('que pasa ? ' + JSON.stringify( this.selectedType));\r\n\r\n                if (field == 'tipo' && this.selectedType && this.selectedType.id) {                    \r\n                    data.tipo = this.selectedType.id;\r\n                } else {\r\n                    data[field] = newValue;\r\n                    //data.tipo = this.tipos.find(item => item.id === data.tipo);\r\n                }\r\n                this.initialValues = data;\r\n                this.initialValues.condominio = this.selectedCondominio;\r\n                await this.updateEgresoType();\r\n                await this.refreshTable();\r\n            }\r\n        },\r\n        isNameValid(data, field) {\r\n            if (!data[field]) {\r\n                this.errors.name = 'El nombre es un campo requerido.';\r\n                return false;\r\n            } else if (data[field].length > 40) {\r\n                this.errors.name = 'El nombre no puede tener mas de 40 caracteres.';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        exportExcel() {\r\n            if (this.items.length === 0) {\r\n                this.toast.add({ severity: 'warn', summary: 'No hay datos para exportar.', life: 3000 });\r\n            } else {\r\n                //arregla titulo de columnas datos\r\n                const itemsExport = this.items.map(item => {\r\n                    return {\r\n                        Tipo: item.tipo,\r\n                        Nombre: item.name,\r\n                    };\r\n                });\r\n\r\n                const worksheet = XLSX.utils.json_to_sheet(itemsExport);\r\n                const workbook = XLSX.utils.book_new();\r\n                XLSX.utils.book_append_sheet(workbook, worksheet, 'Tipos de egresos');\r\n\r\n                // Genera el archivo binario\r\n                const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n                const data = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n\r\n                // Descarga el archivo\r\n                saveAs(data, 'Tipos de egresos.xlsx');\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        selectedCondominio(newValue, oldValue) {\r\n            this.refreshTable();\r\n            this.selectedItems = null;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.refreshTable();\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scope>\r\ninput,\r\nselect {\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.formButtons {\r\n    align-items: center;\r\n    align-content: center;\r\n\r\n}\r\n</style>","import { render } from \"./TipoEgresos.vue?vue&type=template&id=b8ce0cd0\"\nimport script from \"./TipoEgresos.vue?vue&type=script&lang=js\"\nexport * from \"./TipoEgresos.vue?vue&type=script&lang=js\"\n\nimport \"./TipoEgresos.vue?vue&type=style&index=0&id=b8ce0cd0&scope=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Configuracion.vue?vue&type=template&id=2d297399\"\nimport script from \"./Configuracion.vue?vue&type=script&lang=js\"\nexport * from \"./Configuracion.vue?vue&type=script&lang=js\"\n\nimport \"./Configuracion.vue?vue&type=style&index=0&id=2d297399&scope=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","style","_createVNode","_component_Select","$data","selectedItem","$event","options","condominiosList","optionLabel","onChange","$options","refreshTable","size","_component_Button","icon","variant","onClick","top","_component_Tabs","_component_TabList","_Fragment","_renderList","items","tab","_createBlock","_component_Tab","key","id","value","_normalizeClass","_toDisplayString","label","_component_TabPanels","_component_TabPanel","_hoisted_2","_component_Lotes","selectedCondominio","_hoisted_3","_component_TipoLotes","_hoisted_4","_component_TipoCuotas","_hoisted_5","_component_ConceptosCA","_hoisted_6","_component_TipoEgresos","_hoisted_7","_component_Users","_component_Toast","_component_ConfirmPopup","_component_TableBar","showIcons","onAddItem","addItem","onDeleteItem","deleteItem","onRefreshTable","onExportExcel","exportExcel","_component_DataTable","selection","selectedItems","sortField","stripedRows","paginator","rows","selectionMode","metaKeySelection","metaKey","dataKey","editMode","onCellEditComplete","pt","state","empty","_withCtx","_cache","loading","_component_Column","field","header","body","data","name","editor","_component_InputText","autofocus","fluid","onKeydown","_withKeys","target","blur","isNameValid","_component_Message","severity","errors","description","isDescriptionValid","lotetypeName","itemsLoteTypes","selectedLoteType","placeholder","cuotatypeName","itemsCuotaTypes","selectedCuotaType","option","item","amount","_component_Dialog","visible","showAdd","modal","titulo","width","_component_Form","initialValues","resolver","validateOnValueUpdate","validateOnBlur","onSubmit","onFormSubmit","$form","type","invalid","error","message","lotetypeId","cuotatypeId","props","Object","default","components","DataTable","Column","TableBar","Dialog","InputText","Button","Form","Select","Message","ConfirmPopup","Toast","ref","confirm","useConfirm","toast","useToast","newItem","condominio","users","loteType","cuotaType","methods","getTiposLote","this","apiService","getTiposLoteByCondominio","console","add","summary","life","getTiposCuota","getTiposCuotaByCondominio","getLotesByCondominio","updateLote","createLote","deleteLote","event","length","require","currentTarget","rejectProps","outlined","acceptProps","accept","filter","itemx","reject","values","valid","newValue","originalValue","find","itemsExport","map","Nombre","Descripcion","Tipo","Cuota","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","bookType","Blob","saveAs","watch","oldValue","mounted","__exports__","updateLoteType","updateTipoLote","createLoteType","createTipoLote","deleteLoteType","deleteTipoLote","formatCurrency","isAmountValid","updateCuotaType","updateTipoCuota","createCuotaType","createTipoCuota","deleteCuotaType","deleteTipoCuota","toLocaleString","minimumFractionDigits","maximumFractionDigits","Monto","resetPassword","email","phone","address","itemsLote","lote","getUsuariosByCondominio","getLotes","updateUsuario","createUsuario","deleteUsuario","log","Email","Telefono","Direccion","adderss","Lote","addItemC","deleteItemC","refreshTables","selectedItemsC","itemsC","columnResizeMode","metaKeyC","onCellEditCompleteC","headerStyle","addItemA","deleteItemA","selectedItemsA","itemsA","metaKeyA","onCellEditCompleteA","isC","tipo","refreshTableC","refreshTableA","getTransaccionesLoteTypesByCondominio","updateTransaccionesLoteTypes","createTransaccionesLoteTypes","deleteTransaccionesLoteTypes","itemsCargos","itemsAbonos","sortOrder","tipos","selectedType","getTiposEgresosByCondominio","updateEgresoType","updateTipoEgreso","createEgresoType","createTipoEgreso","deleteEgresoType","deleteTipoEgreso","JSON","stringify","Tabs","TabList","Tab","TabPanels","TabPanel","Lotes","TipoLotes","TipoCuotas","Users","ConceptosCA","TipoEgresos","authStore","useAuthStore","userData","getCondominiosByUsr","getUserData","render"],"sourceRoot":""}